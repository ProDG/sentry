services:
  postgres:
    image: postgres:9.6
    container_name: sentry_postgres
    restart: always
    networks:
      - sentry
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  redis:
    image: redis:5.0
    container_name: sentry_redis
    networks:
      - sentry
    restart: always

  sentry_web:
    build: ./sentry
    image: sentry_docker:${SENTRY_VERSION}
    container_name: sentry_web
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - sentry
    command: run web
    ports:
      - "${SENTRY_PORT}:${SENTRY_PORT}"
    env_file:
      - .env

  sentry_workers:
    image: sentry_docker:${SENTRY_VERSION}
    container_name: sentry_workers
    restart: always
    depends_on:
      - sentry_web
      - postgres
      - redis
    networks:
      - sentry
    command: run worker
    environment:
      C_FORCE_ROOT: 1
    env_file:
      - .env

  sentry_beat:
    image: sentry_docker:${SENTRY_VERSION}
    container_name: sentry_beat
    restart: unless-stopped
    depends_on:
      - sentry_web
      - postgres
      - redis
    networks:
      - sentry
    command: run cron
    env_file:
      - .env

networks:
  sentry:

volumes:
  postgres_data: {}
